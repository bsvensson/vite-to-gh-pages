import{E as p,am as a,P as o,r as g,af as s,ag as m,ah as l}from"./index-dadee5ab.js";import{f as c,u as n}from"./LayerView-1f17d75a.js";import{i as d}from"./GraphicContainer-e31b477e.js";import{a as u}from"./GraphicsView2D-05452067.js";import"./Container-045fbc1e.js";import"./definitions-3ddd14a8.js";import"./enums-64ab819c.js";import"./Texture-0caaf40d.js";import"./color-a0f9600f.js";import"./enums-55085e26.js";import"./VertexElementDescriptor-2925c6af.js";import"./BaseGraphicContainer-4591462e.js";import"./FeatureContainer-d5a2b36b.js";import"./AttributeStoreView-5d6af689.js";import"./TiledDisplayObject-cbe05e1a.js";import"./visualVariablesUtils-603c1c62.js";import"./visualVariablesUtils-702f75bc.js";import"./VertexArrayObject-8658aab3.js";import"./TileContainer-b4db0b56.js";import"./WGLContainer-bb0ff625.js";import"./ProgramTemplate-00d2df46.js";import"./MaterialKey-f9533bff.js";import"./utils-0bf8dd59.js";import"./StyleDefinition-fbc907c2.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./earcut-61f7b102.js";import"./vec3f32-ad1dc57f.js";import"./ExpandedCIM-50b756ba.js";import"./BidiEngine-836b7ef6.js";import"./GeometryUtils-53652037.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-045e9599.js";import"./floatRGBA-a2166fa0.js";import"./normalizeUtilsSync-7a070bce.js";import"./projectionSupport-93aece45.js";import"./json-48e3ea08.js";import"./Matcher-2a7b7e21.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-5044eca6.js";import"./devEnvironmentUtils-5002a058.js";import"./schemaUtils-f4332cac.js";import"./util-baa71c84.js";import"./ComputedAttributeStorage-c600e7e0.js";import"./arcadeTimeUtils-6e097de9.js";import"./executionError-fb3f283a.js";import"./centroid-78b55967.js";const w={remove(){},pause(){},resume(){}};let e=class extends c(n){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new u({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new d(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler))}detach(){this.container.removeAllChildren(),this.graphicsView=p(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){return this.graphicsView?this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate):[]}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof a?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):o.isCollection(i)&&i.length>0&&(t=i.map(h=>h&&h.uid).toArray());const r=t==null?void 0:t.filter(g);return r!=null&&r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):w}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};s([m()],e.prototype,"graphicsView",void 0),e=s([l("esri.views.2d.layers.GraphicsLayerView2D")],e);const mi=e;export{mi as default};
